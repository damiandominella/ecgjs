{"version":3,"file":"ecg.min.js","sources":["index.js"],"sourcesContent":["\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nvar EcgJsHandler = /** @class */ (function () {\r\n    // -----------------------------------------------------------------\r\n    //                     c o n s t r u c t o r\r\n    // -----------------------------------------------------------------\r\n    /**\r\n     *\r\n     * @param elementId\r\n     * @param plotly\r\n     * @param data data traces\r\n     * @param config plotly js config\r\n     * @param layout plotly js layout\r\n     */\r\n    function EcgJsHandler(elementId, plotly, data, config, layout) {\r\n        if (config === void 0) { config = {}; }\r\n        if (layout === void 0) { layout = {}; }\r\n        /**\r\n         * xaxis range\r\n         */\r\n        this.X_MIN = 0;\r\n        this.X_MAX = 4000;\r\n        /**\r\n         * yaxis range\r\n         */\r\n        this.Y_MIN = 1.12;\r\n        this.Y_MAX = 1.17;\r\n        console.log(\"[ecgjs] INIT\");\r\n        this.$plotly = plotly;\r\n        this.elementId = elementId;\r\n        this.element = document.getElementById(elementId);\r\n        if (!data) {\r\n            this.data = {\r\n                x: [],\r\n                y: []\r\n            };\r\n        }\r\n        else {\r\n            if (!data.x) {\r\n                this.data.x = [];\r\n            }\r\n            if (!data.y) {\r\n                this.data.y = [];\r\n            }\r\n        }\r\n        this.setDefaults();\r\n        this.config = __assign(__assign({}, this.config), config);\r\n        this.layout = __assign(__assign({}, this.layout), layout);\r\n        this.index = 0;\r\n        this.originalSpeed = 1;\r\n        this.speed = this.originalSpeed;\r\n        this.isPlaying = false;\r\n        this.annotations = [];\r\n    }\r\n    // -----------------------------------------------------------------\r\n    //                     p u b l i c\r\n    // -----------------------------------------------------------------\r\n    /**\r\n     * Inits the empty plot.\r\n     */\r\n    EcgJsHandler.prototype.plot = function () {\r\n        console.log(\"[ecgjs] PLOT\");\r\n        this.$plotly.newPlot(this.elementId, [\r\n            {\r\n                x: this.data.x,\r\n                y: this.data.y,\r\n                name: \"Ecg\",\r\n                mode: \"scatter\"\r\n            }\r\n        ], this.layout, this.config);\r\n    };\r\n    /**\r\n     * Reset graph to defaults\r\n     */\r\n    EcgJsHandler.prototype.reset = function () {\r\n        console.log(\"[ecgjs] RESET\");\r\n        this.pause();\r\n        this.setDefaults();\r\n        this.$plotly.purge(this.elementId);\r\n        this.index = 0;\r\n        // Reinit void trace\r\n        this.plot();\r\n    };\r\n    /**\r\n     * Clears all the notes.\r\n     */\r\n    EcgJsHandler.prototype.clearNotes = function () {\r\n        console.log(\"[ecgjs] CLEAR_NOTES\");\r\n        this.annotations = [];\r\n        this.$plotly.relayout(this.elementId, { annotations: [] });\r\n    };\r\n    /**\r\n     * Adds a note in the specified point with text.\r\n     *\r\n     * @param text\r\n     * @param plotlyData\r\n     */\r\n    EcgJsHandler.prototype.addNote = function (text, plotlyData) {\r\n        var note = {\r\n            text: text,\r\n            x: plotlyData.points[0].x,\r\n            y: parseFloat(plotlyData.points[0].y.toPrecision(4)),\r\n            font: {\r\n                size: 14,\r\n                color: \"#333\"\r\n            },\r\n            ax: 20,\r\n            ay: -30,\r\n            borderpad: 2,\r\n            bgcolor: \"#FFEC8B\",\r\n            opacity: 0.9\r\n        };\r\n        this.annotations = this.layout.annotations || [];\r\n        this.annotations.push(note);\r\n        this.$plotly.relayout(this.elementId, { annotations: this.annotations });\r\n    };\r\n    // public play(): void {\r\n    // \tif (!this.isPlaying) {\r\n    // \t\tconsole.log(\"[ecgjs] PLAY\");\r\n    // \t\tthis.hideFull();\r\n    // \t\tthis.isPlaying = true;\r\n    // \t\tthis.interval = setInterval(() => {\r\n    // \t\t\tvar xValues = [this.data.x[this.index]];\r\n    // \t\t\tvar yValues = [this.data.y[this.index]];\r\n    // \t\t\tfor (var i = this.originalSpeed; i < this.speed; i++) {\r\n    // \t\t\t\txValues.push(this.data.x[this.index + i]);\r\n    // \t\t\t\tyValues.push(this.data.y[this.index + i]);\r\n    // \t\t\t}\r\n    // \t\t\tlet mustModule: boolean = false;\r\n    // \t\t\tfor (let x of xValues) {\r\n    // \t\t\t\tif (x >= this.X_MAX - 4) {\r\n    // \t\t\t\t\tmustModule = true;\r\n    // \t\t\t\t\tbreak;\r\n    // \t\t\t\t}\r\n    // \t\t\t}\r\n    // \t\t\tlet _index: number = -1;\r\n    // \t\t\tif (mustModule) {\r\n    // \t\t\t\txValues = xValues.map((val: number) => val % this.X_MAX);\r\n    // \t\t\t\t_index = xValues.indexOf(0);\r\n    // \t\t\t}\r\n    // \t\t\tconsole.log(\r\n    // \t\t\t\t\"current traces (\" + this.element.data.length + \"):\",\r\n    // \t\t\t\tthis.element.data\r\n    // \t\t\t);\r\n    // \t\t\tif (_index > -1) {\r\n    // \t\t\t\tif (_index > 0) {\r\n    // \t\t\t\t\t// adding last chunks to current trace\r\n    // \t\t\t\t\tconsole.log(\"adding last chunks, extend last trace\");\r\n    // \t\t\t\t\tthis.$plotly.extendTraces(\r\n    // \t\t\t\t\t\tthis.elementId,\r\n    // \t\t\t\t\t\t{\r\n    // \t\t\t\t\t\t\tx: [xValues.slice(0, _index - 1)],\r\n    // \t\t\t\t\t\t\ty: [yValues.slice(0, _index - 1)]\r\n    // \t\t\t\t\t\t},\r\n    // \t\t\t\t\t\t[-1] // -1 = last\r\n    // \t\t\t\t\t);\r\n    // \t\t\t\t}\r\n    // \t\t\t\tif (this.element.data.length > 1) {\r\n    // \t\t\t\t\t// delete old trace\r\n    // \t\t\t\t\tconsole.log(\"delete trace: 0\");\r\n    // \t\t\t\t\tthis.$plotly.deleteTraces(this.elementId, 0);\r\n    // \t\t\t\t}\r\n    // \t\t\t\t// add new trace\r\n    // \t\t\t\tconsole.log(\r\n    // \t\t\t\t\t\"add new trace with values:\",\r\n    // \t\t\t\t\txValues.slice(_index),\r\n    // \t\t\t\t\tyValues.slice(_index)\r\n    // \t\t\t\t);\r\n    // \t\t\t\tthis.$plotly.addTraces(this.elementId, [\r\n    // \t\t\t\t\t{\r\n    // \t\t\t\t\t\tx: xValues.slice(_index),\r\n    // \t\t\t\t\t\ty: yValues.slice(_index),\r\n    // \t\t\t\t\t\tmode: \"lines\"\r\n    // \t\t\t\t\t}\r\n    // \t\t\t\t]);\r\n    // \t\t\t} else {\r\n    // \t\t\t\tconsole.log(\"extend last trace\");\r\n    // \t\t\t\tthis.$plotly.extendTraces(\r\n    // \t\t\t\t\tthis.elementId,\r\n    // \t\t\t\t\t{\r\n    // \t\t\t\t\t\tx: [xValues],\r\n    // \t\t\t\t\t\ty: [yValues]\r\n    // \t\t\t\t\t},\r\n    // \t\t\t\t\t[-1] // -1 = last\r\n    // \t\t\t\t);\r\n    // \t\t\t}\r\n    // \t\t\tif (this.element.data.length > 1) {\r\n    // \t\t\t\tconsole.log(\"must update old trace\");\r\n    // \t\t\t\tlet new_trace = {\r\n    // \t\t\t\t\tx: [this.data.x.slice(this.index % 1000, this.index + 100)],\r\n    // \t\t\t\t\ty: [this.data.y.slice(this.index % 1000, this.index + 100)]\r\n    // \t\t\t\t};\r\n    // \t\t\t\t// update old trace\r\n    // \t\t\t\tthis.$plotly.update(this.elementId, new_trace, {}, [0]);\r\n    // \t\t\t}\r\n    // \t\t\tif (this.index + this.speed === this.data.x.length - 1) {\r\n    // \t\t\t\tclearInterval(this.interval);\r\n    // \t\t\t} else {\r\n    // \t\t\t\tthis.index += this.speed;\r\n    // \t\t\t}\r\n    // \t\t\tvar mustUpdateRange = false;\r\n    // \t\t\t// if (this.data.x[this.index] > this.X_MAX / 2) {\r\n    // \t\t\t// \tmustUpdateRange = true;\r\n    // \t\t\t// \tvar x_start = this.data.x[this.index] - this.X_MAX / 2;\r\n    // \t\t\t// \tvar x_end = x_start + this.X_MAX;\r\n    // \t\t\t// \tthis.xRange = [x_start, x_end];\r\n    // \t\t\t// }\r\n    // \t\t\t// let median: number = this.yRange[1] - this.yRange[0];\r\n    // \t\t\t// if (this.data.y[this.index] < median) {\r\n    // \t\t\t// \tmustUpdateRange = true;\r\n    // \t\t\t// \tvar y_start = this.data.y[this.index] - this.Y_MIN / 2;\r\n    // \t\t\t// \tvar y_end = y_start + this.Y_MIN;\r\n    // \t\t\t// \tthis.yRange = [y_start, y_end];\r\n    // \t\t\t// }\r\n    // \t\t\t// if (!!mustUpdateRange) {\r\n    // \t\t\t// \tthis.updateRange();\r\n    // \t\t\t// }\r\n    // \t\t}, 25);\r\n    // \t}\r\n    // }\r\n    /**\r\n     * Replaces current data.\r\n     *\r\n     * @param data\r\n     */\r\n    EcgJsHandler.prototype.setData = function (data) {\r\n        console.log(\"[ecgjs] SET_DATA\");\r\n        this.data = data;\r\n        this.$plotly.update(this.elementId, {\r\n            x: [this.data.x],\r\n            y: [this.data.y]\r\n        }, {}, [0]);\r\n    };\r\n    /**\r\n     * Adds data, concat arrays.\r\n     *\r\n     * @param data\r\n     */\r\n    EcgJsHandler.prototype.addData = function (data) {\r\n        console.log(\"[ecgjs] ADD_DATA\", data);\r\n        this.data.x = this.data.x.concat(data.x);\r\n        this.data.y = this.data.y.concat(data.y);\r\n        this.$plotly.extendTraces(this.elementId, {\r\n            x: [data.x],\r\n            y: [data.y]\r\n        }, [0]);\r\n        var last = this.data.x[this.data.x.length - 1];\r\n        if (last > this.X_MAX) {\r\n            var x_start = last - this.X_MAX;\r\n            var x_end = x_start + this.X_MAX;\r\n            this.xRange = [x_start, x_end];\r\n            this.updateRange();\r\n        }\r\n    };\r\n    /**\r\n     * Plays the ECG Graph.\r\n     */\r\n    EcgJsHandler.prototype.play = function () {\r\n        var _this = this;\r\n        if (!this.isPlaying) {\r\n            console.log(\"[ecgjs] PLAY\");\r\n            this.isPlaying = true;\r\n            this.interval = setInterval(function () {\r\n                _this.xRange = _this.xRange.map(function (val) { return val + 10 * _this.speed; });\r\n                _this.updateRange();\r\n            }, 25);\r\n        }\r\n    };\r\n    /**\r\n     * Pauses the ECG Graph.\r\n     */\r\n    EcgJsHandler.prototype.pause = function () {\r\n        if (this.isPlaying) {\r\n            console.log(\"[ecgjs] PAUSE\");\r\n            if (!!this.interval) {\r\n                this.isPlaying = false;\r\n                clearInterval(this.interval);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Changes the speed.\r\n     *\r\n     * @param multiplier\r\n     */\r\n    EcgJsHandler.prototype.changeSpeed = function (multiplier) {\r\n        console.log(\"[ecgjs] CHANGE_SPEED\");\r\n        this.speed = this.originalSpeed * multiplier;\r\n    };\r\n    /**\r\n     * Update axis ranges.\r\n     *\r\n     * @param xRange\r\n     * @param yRange\r\n     */\r\n    EcgJsHandler.prototype.updateRange = function (xRange, yRange) {\r\n        console.log(\"[ecgjs] UPDATE_RANGE\");\r\n        if (!!xRange) {\r\n            this.xRange = xRange;\r\n        }\r\n        if (!!yRange) {\r\n            this.yRange = yRange;\r\n        }\r\n        this.$plotly.relayout(this.elementId, {\r\n            \"xaxis.range\": this.xRange,\r\n            \"yaxis.range\": this.yRange\r\n        });\r\n    };\r\n    // -----------------------------------------------------------------\r\n    //                     l a y o u t\r\n    // -----------------------------------------------------------------\r\n    /**\r\n     * Hides x axis grid lines.\r\n     */\r\n    EcgJsHandler.prototype.hideXGrid = function () {\r\n        this.relayout({\r\n            \"xaxis.showgrid\": false\r\n        });\r\n    };\r\n    /**\r\n     * Shows x axis grid lines.\r\n     */\r\n    EcgJsHandler.prototype.showXGrid = function () {\r\n        this.relayout({\r\n            \"xaxis.showgrid\": true\r\n        });\r\n    };\r\n    /**\r\n     * Hides y axis grid lines.\r\n     */\r\n    EcgJsHandler.prototype.hideYGrid = function () {\r\n        this.relayout({\r\n            \"yaxis.showgrid\": false\r\n        });\r\n    };\r\n    /**\r\n     * Shows y axis grid lines.\r\n     */\r\n    EcgJsHandler.prototype.showYGrid = function () {\r\n        this.relayout({\r\n            \"yaxis.showgrid\": true\r\n        });\r\n    };\r\n    /**\r\n     * Hides grid lines.\r\n     */\r\n    EcgJsHandler.prototype.hideGrid = function () {\r\n        this.relayout({\r\n            \"xaxis.showgrid\": false,\r\n            \"yaxis.showgrid\": false\r\n        });\r\n    };\r\n    /**\r\n     * Shows grid lines.\r\n     */\r\n    EcgJsHandler.prototype.showGrid = function () {\r\n        this.relayout({\r\n            \"xaxis.showgrid\": true,\r\n            \"yaxis.showgrid\": true\r\n        });\r\n    };\r\n    /**\r\n     * Relayouts the graph.\r\n     *\r\n     * @param layout\r\n     */\r\n    EcgJsHandler.prototype.relayout = function (layout) {\r\n        this.$plotly.relayout(this.elementId, layout);\r\n    };\r\n    // -----------------------------------------------------------------\r\n    //                     p r i v a t e\r\n    // -----------------------------------------------------------------\r\n    /**\r\n     * Sets default layout and config props\r\n     */\r\n    EcgJsHandler.prototype.setDefaults = function () {\r\n        this.setDefaultRanges();\r\n        this.layout = {\r\n            title: \"EcgJs\",\r\n            height: 500,\r\n            colorway: [\"#000\", \"#777\"],\r\n            annotations: this.annotations,\r\n            xaxis: {\r\n                title: \"Time (ms)\",\r\n                range: this.xRange,\r\n                fixedrange: false,\r\n                showline: true,\r\n                showgrid: true,\r\n                gridcolor: \"#ff0202\",\r\n                tickmode: \"linear\",\r\n                dtick: 200\r\n            },\r\n            yaxis: {\r\n                title: \"Amplitude (mV)\",\r\n                range: this.yRange,\r\n                fixedrange: false,\r\n                showline: true,\r\n                showgrid: true,\r\n                gridcolor: \"#ff0202\",\r\n                tickmode: \"linear\",\r\n                dtick: 0.005\r\n            }\r\n        };\r\n        this.config = {\r\n            responsive: true,\r\n            scrollZoom: false,\r\n            displayModeBar: true,\r\n            showlegend: false,\r\n            modeBarButtonsToRemove: [\"autoScale2d\"]\r\n        };\r\n    };\r\n    /**\r\n     * Sets default axis ranges\r\n     */\r\n    EcgJsHandler.prototype.setDefaultRanges = function () {\r\n        this.xRange = [this.X_MIN, this.X_MAX];\r\n        this.yRange = [this.Y_MIN, this.Y_MAX];\r\n    };\r\n    return EcgJsHandler;\r\n}());\r\n/**\r\n * Init EcgJs\r\n * @param elementId\r\n * @param params\r\n */\r\nfunction init(elementId, params) {\r\n    var handler = new EcgJsHandler(elementId, params.plotly, params.data, params.config, params.layout);\r\n    handler.plot();\r\n    return handler;\r\n}\r\nexports.init = init;\r\n//# sourceMappingURL=index.js.map"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","exports","EcgJsHandler","elementId","plotly","data","config","layout","X_MIN","X_MAX","Y_MIN","Y_MAX","console","log","$plotly","element","document","getElementById","x","y","setDefaults","index","originalSpeed","speed","isPlaying","annotations","plot","newPlot","name","mode","reset","pause","purge","clearNotes","relayout","addNote","text","plotlyData","note","points","parseFloat","toPrecision","font","size","color","ax","ay","borderpad","bgcolor","opacity","push","setData","update","addData","concat","extendTraces","last","x_start","x_end","xRange","updateRange","play","_this","interval","setInterval","map","val","clearInterval","changeSpeed","multiplier","yRange","hideXGrid","showXGrid","hideYGrid","showYGrid","hideGrid","showGrid","setDefaultRanges","title","height","colorway","xaxis","range","fixedrange","showline","showgrid","gridcolor","tickmode","dtick","yaxis","responsive","scrollZoom","displayModeBar","showlegend","modeBarButtonsToRemove","params","handler"],"mappings":"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"}